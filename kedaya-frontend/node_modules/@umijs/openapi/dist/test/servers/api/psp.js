"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.uEvaluationReportList = exports.uEvaluationReport = exports.uEvaluationInfo = exports.utilUpload = exports.utilData = exports.utilArea = exports.userSheetAll = exports.userSheetToggle = exports.userSheetUpdate = exports.userSheetCreate = exports.userSheetList = exports.userToggle = exports.userList = exports.systemScreenData = exports.systemLogExport = exports.systemLog = exports.scalePreview = exports.scaleImport = exports.scaleAll = exports.scaleToggle = exports.scaleInfo = exports.scaleList = exports.organizationAll = exports.organizationToggle = exports.organizationPermissions = exports.organizationMove = exports.organizationUpdate = exports.organizationInfo = exports.organizationCreate = exports.logout = exports.login = exports.logInfo = exports.evaluationReportExport = exports.evaluationReportSend = exports.evaluationReportExamine = exports.evaluationReportData = exports.evaluationReportList = exports.evaluationAll = exports.evaluationData = exports.evaluationUpdate = exports.evaluationCreate = exports.evaluationList = exports.adminAll = exports.adminToggle = exports.adminReset = exports.adminSetPermissions = exports.adminUpdate = exports.adminInfo = exports.adminCreate = exports.adminList = void 0;
exports.uUtilData = exports.uProfileUpdate = exports.uProfileInfo = exports.uLoginVerify = exports.uLogin = exports.uEvaluationReportData = void 0;
const tslib_1 = require("tslib");
// @ts-ignore
/* eslint-disable */
const umi_1 = require("umi");
/** 成员分页列表 GET /admin/admins */
function adminList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/admins', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.adminList = adminList;
/** 成员创建 POST /admin/admins */
function adminCreate(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/admins', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.adminCreate = adminCreate;
/** 成员信息 GET /admin/admins/${param0} */
function adminInfo(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/admins/${param0}`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.adminInfo = adminInfo;
/** 成员编辑 PUT /admin/admins/${param0} */
function adminUpdate(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/admins/${param0}`, Object.assign({ method: 'PUT', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.adminUpdate = adminUpdate;
/** 成员权限设置 PATCH /admin/admins/${param0}/permissions */
function adminSetPermissions(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/admins/${param0}/permissions`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.adminSetPermissions = adminSetPermissions;
/** 成员重置密码 PATCH /admin/admins/${param0}/reset */
function adminReset(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/admins/${param0}/reset`, Object.assign({ method: 'PATCH', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.adminReset = adminReset;
/** 启用/禁用成员 PATCH /admin/admins/${param0}/toggle */
function adminToggle(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/admins/${param0}/toggle`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.adminToggle = adminToggle;
/** 成员全部数据 GET /admin/admins/all */
function adminAll(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/admins/all', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.adminAll = adminAll;
/** 测评分页列表 GET /admin/evaluations */
function evaluationList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/evaluations', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.evaluationList = evaluationList;
/** 测评创建 POST /admin/evaluations */
function evaluationCreate(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/evaluations', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.evaluationCreate = evaluationCreate;
/** 测评更新 PUT /admin/evaluations/${param0} */
function evaluationUpdate(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/evaluations/${param0}`, Object.assign({ method: 'PUT', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.evaluationUpdate = evaluationUpdate;
/** 团测分析 GET /admin/evaluations/${param0}/data */
function evaluationData(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/evaluations/${param0}/data`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.evaluationData = evaluationData;
/** 测评全部数据 GET /admin/evaluations/all */
function evaluationAll(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/evaluations/all', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.evaluationAll = evaluationAll;
/** 测评报告分页列表 GET /admin/evaluations/reports */
function evaluationReportList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/evaluations/reports', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.evaluationReportList = evaluationReportList;
/** 查看测评报告数据 GET /admin/evaluations/reports/${param0}/data */
function evaluationReportData(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/evaluations/reports/${param0}/data`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.evaluationReportData = evaluationReportData;
/** 测评报告审核 PATCH /admin/evaluations/reports/${param0}/examine */
function evaluationReportExamine(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/evaluations/reports/${param0}/examine`, Object.assign({ method: 'PATCH', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.evaluationReportExamine = evaluationReportExamine;
/** 测评报告发送 PATCH /admin/evaluations/reports/${param0}/send */
function evaluationReportSend(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/evaluations/reports/${param0}/send`, Object.assign({ method: 'PATCH', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.evaluationReportSend = evaluationReportSend;
/** 测评报告导出 GET /admin/evaluations/reports/export */
function evaluationReportExport(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/evaluations/reports/export', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.evaluationReportExport = evaluationReportExport;
/** 获取当前登录账号信息 GET /admin/login */
function logInfo(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/login', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.logInfo = logInfo;
/** 账号登入 POST /admin/login */
function login(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/login', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.login = login;
/** 账号登出 DELETE /admin/login */
function logout(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/login', Object.assign({ method: 'DELETE' }, (options || {})));
    });
}
exports.logout = logout;
/** 机构创建 POST /admin/organizations */
function organizationCreate(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/organizations', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.organizationCreate = organizationCreate;
/** 机构详情 GET /admin/organizations/${param0} */
function organizationInfo(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/organizations/${param0}`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.organizationInfo = organizationInfo;
/** 机构编辑 PUT /admin/organizations/${param0} */
function organizationUpdate(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/organizations/${param0}`, Object.assign({ method: 'PUT', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.organizationUpdate = organizationUpdate;
/** 机构移动 PATCH /admin/organizations/${param0}/move */
function organizationMove(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/organizations/${param0}/move`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.organizationMove = organizationMove;
/** 获取机构成员权限表 GET /admin/organizations/${param0}/permissions */
function organizationPermissions(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/organizations/${param0}/permissions`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.organizationPermissions = organizationPermissions;
/** 启用/禁用机构 PATCH /admin/organizations/${param0}/toggle */
function organizationToggle(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/organizations/${param0}/toggle`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.organizationToggle = organizationToggle;
/** 机构树形列表 GET /admin/organizations/all */
function organizationAll(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/organizations/all', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.organizationAll = organizationAll;
/** 量表分页列表 GET /admin/scales */
function scaleList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/scales', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.scaleList = scaleList;
/** 量表详情 GET /admin/scales/${param0} */
function scaleInfo(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/scales/${param0}`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.scaleInfo = scaleInfo;
/** 启用/禁用量表 PATCH /admin/scales/${param0}/toggle */
function scaleToggle(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/scales/${param0}/toggle`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.scaleToggle = scaleToggle;
/** 量表全部数据 GET /admin/scales/all */
function scaleAll(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/scales/all', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.scaleAll = scaleAll;
/** 通过excel导入量表 POST /admin/scales/import */
function scaleImport(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/scales/import', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.scaleImport = scaleImport;
/** 量表预览 GET /admin/scales/preview */
function scalePreview(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/scales/preview', Object.assign({ method: 'GET', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.scalePreview = scalePreview;
/** 操作日志 GET /admin/systems/logs */
function systemLog(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/systems/logs', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.systemLog = systemLog;
/** 操作日志导出 GET /admin/systems/logs/export */
function systemLogExport(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/systems/logs/export', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.systemLogExport = systemLogExport;
/** 数据大屏 GET /admin/systems/screen/data */
function systemScreenData(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/systems/screen/data', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.systemScreenData = systemScreenData;
/** 用户分页列表 GET /admin/users */
function userList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/users', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.userList = userList;
/** 启用/禁用用户 PATCH /admin/users/${param0}/toggle */
function userToggle(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/users/${param0}/toggle`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.userToggle = userToggle;
/** 信息表分页列表 GET /admin/users/sheets */
function userSheetList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/users/sheets', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.userSheetList = userSheetList;
/** 信息表创建 POST /admin/users/sheets */
function userSheetCreate(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/users/sheets', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.userSheetCreate = userSheetCreate;
/** 信息表更新 PUT /admin/users/sheets/${param0} */
function userSheetUpdate(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/users/sheets/${param0}`, Object.assign({ method: 'PUT', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.userSheetUpdate = userSheetUpdate;
/** 启用/禁用信息表 PATCH /admin/users/sheets/${param0}/toggle */
function userSheetToggle(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/users/sheets/${param0}/toggle`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.userSheetToggle = userSheetToggle;
/** 信息表全部数据 GET /admin/users/sheets/all */
function userSheetAll(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/users/sheets/all', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.userSheetAll = userSheetAll;
/** 获取地区数据 GET /admin/utils/areas */
function utilArea(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/utils/areas', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.utilArea = utilArea;
/** 获取字典数据 GET /admin/utils/data */
function utilData(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/utils/data', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.utilData = utilData;
/** 上传文件 POST /admin/utils/uploads */
function utilUpload(body, file, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const formData = new FormData();
        if (file) {
            formData.append('file', file);
        }
        Object.keys(body).forEach((ele) => {
            const item = body[ele];
            if (item !== undefined && item !== null) {
                if (typeof item === 'object' && !(item instanceof File)) {
                    if (item instanceof Array) {
                        item.forEach((f) => formData.append(ele, f || ''));
                    }
                    else {
                        formData.append(ele, JSON.stringify(item));
                    }
                }
                else {
                    formData.append(ele, item);
                }
            }
        });
        return umi_1.request('/admin/utils/uploads', Object.assign({ method: 'POST', data: formData, requestType: 'form' }, (options || {})));
    });
}
exports.utilUpload = utilUpload;
/** 获取测评数据 GET /user/evaluations/${param0} */
function uEvaluationInfo(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/user/evaluations/${param0}`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.uEvaluationInfo = uEvaluationInfo;
/** 提交测评报告 POST /user/evaluations/${param0}/reports */
function uEvaluationReport(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/user/evaluations/${param0}/reports`, Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.uEvaluationReport = uEvaluationReport;
/** 测评报告分页列表 GET /user/evaluations/reports */
function uEvaluationReportList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/evaluations/reports', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.uEvaluationReportList = uEvaluationReportList;
/** 查看测评报告数据 GET /user/evaluations/reports/${param0} */
function uEvaluationReportData(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/user/evaluations/reports/${param0}`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.uEvaluationReportData = uEvaluationReportData;
/** 账号登入 POST /user/login */
function uLogin(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/login', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.uLogin = uLogin;
/** 发送验证短信 POST /user/login/verify */
function uLoginVerify(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/login/verify', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.uLoginVerify = uLoginVerify;
/** 获取资料 GET /user/profile */
function uProfileInfo(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/profile', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.uProfileInfo = uProfileInfo;
/** 更新资料 PUT /user/profile */
function uProfileUpdate(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/profile', Object.assign({ method: 'PUT', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.uProfileUpdate = uProfileUpdate;
/** 获取字典数据 GET /user/utils/data */
function uUtilData(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/utils/data', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.uUtilData = uUtilData;
