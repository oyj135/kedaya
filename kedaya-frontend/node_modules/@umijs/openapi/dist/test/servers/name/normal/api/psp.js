"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.uEvaluationReportList = exports.uEvaluationReport = exports.uEvaluationInfo = exports.UtilUpload = exports.UtilData = exports.UtilArea = exports.UserSheetAll = exports.UserSheetToggle = exports.UserSheetUpdate = exports.UserSheetCreate = exports.UserSheetList = exports.UserToggle = exports.UserList = exports.SystemScreenData = exports.SystemLogExport = exports.SystemLog = exports.ScalePreview = exports.ScaleImport = exports.ScaleAll = exports.ScaleToggle = exports.ScaleInfo = exports.ScaleList = exports.OrganizationAll = exports.OrganizationToggle = exports.OrganizationPermissions = exports.OrganizationMove = exports.OrganizationUpdate = exports.OrganizationInfo = exports.OrganizationCreate = exports.Logout = exports.Login = exports.LogInfo = exports.EvaluationReportExport = exports.EvaluationReportSend = exports.EvaluationReportExamine = exports.EvaluationReportData = exports.EvaluationReportList = exports.EvaluationAll = exports.EvaluationData = exports.EvaluationUpdate = exports.EvaluationCreate = exports.EvaluationList = exports.AdminAll = exports.AdminToggle = exports.AdminReset = exports.AdminSetPermissions = exports.AdminUpdate = exports.AdminInfo = exports.AdminCreate = exports.AdminList = void 0;
exports.uUtilData = exports.uProfileUpdate = exports.uProfileInfo = exports.uLoginVerify = exports.uLogin = exports.uEvaluationReportData = void 0;
const tslib_1 = require("tslib");
// @ts-ignore
/* eslint-disable */
const umi_1 = require("umi");
/** 成员分页列表 GET /admin/admins */
function AdminList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/admins', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.AdminList = AdminList;
/** 成员创建 POST /admin/admins */
function AdminCreate(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/admins', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.AdminCreate = AdminCreate;
/** 成员信息 GET /admin/admins/${param0} */
function AdminInfo(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/admins/${param0}`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.AdminInfo = AdminInfo;
/** 成员编辑 PUT /admin/admins/${param0} */
function AdminUpdate(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/admins/${param0}`, Object.assign({ method: 'PUT', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.AdminUpdate = AdminUpdate;
/** 成员权限设置 PATCH /admin/admins/${param0}/permissions */
function AdminSetPermissions(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/admins/${param0}/permissions`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.AdminSetPermissions = AdminSetPermissions;
/** 成员重置密码 PATCH /admin/admins/${param0}/reset */
function AdminReset(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/admins/${param0}/reset`, Object.assign({ method: 'PATCH', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.AdminReset = AdminReset;
/** 启用/禁用成员 PATCH /admin/admins/${param0}/toggle */
function AdminToggle(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/admins/${param0}/toggle`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.AdminToggle = AdminToggle;
/** 成员全部数据 GET /admin/admins/all */
function AdminAll(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/admins/all', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.AdminAll = AdminAll;
/** 测评分页列表 GET /admin/evaluations */
function EvaluationList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/evaluations', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.EvaluationList = EvaluationList;
/** 测评创建 POST /admin/evaluations */
function EvaluationCreate(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/evaluations', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.EvaluationCreate = EvaluationCreate;
/** 测评更新 PUT /admin/evaluations/${param0} */
function EvaluationUpdate(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/evaluations/${param0}`, Object.assign({ method: 'PUT', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.EvaluationUpdate = EvaluationUpdate;
/** 团测分析 GET /admin/evaluations/${param0}/data */
function EvaluationData(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/evaluations/${param0}/data`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.EvaluationData = EvaluationData;
/** 测评全部数据 GET /admin/evaluations/all */
function EvaluationAll(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/evaluations/all', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.EvaluationAll = EvaluationAll;
/** 测评报告分页列表 GET /admin/evaluations/reports */
function EvaluationReportList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/evaluations/reports', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.EvaluationReportList = EvaluationReportList;
/** 查看测评报告数据 GET /admin/evaluations/reports/${param0}/data */
function EvaluationReportData(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/evaluations/reports/${param0}/data`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.EvaluationReportData = EvaluationReportData;
/** 测评报告审核 PATCH /admin/evaluations/reports/${param0}/examine */
function EvaluationReportExamine(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/evaluations/reports/${param0}/examine`, Object.assign({ method: 'PATCH', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.EvaluationReportExamine = EvaluationReportExamine;
/** 测评报告发送 PATCH /admin/evaluations/reports/${param0}/send */
function EvaluationReportSend(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/evaluations/reports/${param0}/send`, Object.assign({ method: 'PATCH', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.EvaluationReportSend = EvaluationReportSend;
/** 测评报告导出 GET /admin/evaluations/reports/export */
function EvaluationReportExport(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/evaluations/reports/export', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.EvaluationReportExport = EvaluationReportExport;
/** 获取当前登录账号信息 GET /admin/login */
function LogInfo(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/login', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.LogInfo = LogInfo;
/** 账号登入 POST /admin/login */
function Login(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/login', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.Login = Login;
/** 账号登出 DELETE /admin/login */
function Logout(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/login', Object.assign({ method: 'DELETE' }, (options || {})));
    });
}
exports.Logout = Logout;
/** 机构创建 POST /admin/organizations */
function OrganizationCreate(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/organizations', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.OrganizationCreate = OrganizationCreate;
/** 机构详情 GET /admin/organizations/${param0} */
function OrganizationInfo(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/organizations/${param0}`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.OrganizationInfo = OrganizationInfo;
/** 机构编辑 PUT /admin/organizations/${param0} */
function OrganizationUpdate(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/organizations/${param0}`, Object.assign({ method: 'PUT', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.OrganizationUpdate = OrganizationUpdate;
/** 机构移动 PATCH /admin/organizations/${param0}/move */
function OrganizationMove(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/organizations/${param0}/move`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.OrganizationMove = OrganizationMove;
/** 获取机构成员权限表 GET /admin/organizations/${param0}/permissions */
function OrganizationPermissions(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/organizations/${param0}/permissions`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.OrganizationPermissions = OrganizationPermissions;
/** 启用/禁用机构 PATCH /admin/organizations/${param0}/toggle */
function OrganizationToggle(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/organizations/${param0}/toggle`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.OrganizationToggle = OrganizationToggle;
/** 机构树形列表 GET /admin/organizations/all */
function OrganizationAll(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/organizations/all', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.OrganizationAll = OrganizationAll;
/** 量表分页列表 GET /admin/scales */
function ScaleList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/scales', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.ScaleList = ScaleList;
/** 量表详情 GET /admin/scales/${param0} */
function ScaleInfo(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/scales/${param0}`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.ScaleInfo = ScaleInfo;
/** 启用/禁用量表 PATCH /admin/scales/${param0}/toggle */
function ScaleToggle(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/scales/${param0}/toggle`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.ScaleToggle = ScaleToggle;
/** 量表全部数据 GET /admin/scales/all */
function ScaleAll(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/scales/all', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.ScaleAll = ScaleAll;
/** 通过excel导入量表 POST /admin/scales/import */
function ScaleImport(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/scales/import', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.ScaleImport = ScaleImport;
/** 量表预览 GET /admin/scales/preview */
function ScalePreview(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/scales/preview', Object.assign({ method: 'GET', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.ScalePreview = ScalePreview;
/** 操作日志 GET /admin/systems/logs */
function SystemLog(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/systems/logs', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.SystemLog = SystemLog;
/** 操作日志导出 GET /admin/systems/logs/export */
function SystemLogExport(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/systems/logs/export', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.SystemLogExport = SystemLogExport;
/** 数据大屏 GET /admin/systems/screen/data */
function SystemScreenData(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/systems/screen/data', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.SystemScreenData = SystemScreenData;
/** 用户分页列表 GET /admin/users */
function UserList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/users', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.UserList = UserList;
/** 启用/禁用用户 PATCH /admin/users/${param0}/toggle */
function UserToggle(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/users/${param0}/toggle`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.UserToggle = UserToggle;
/** 信息表分页列表 GET /admin/users/sheets */
function UserSheetList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/users/sheets', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.UserSheetList = UserSheetList;
/** 信息表创建 POST /admin/users/sheets */
function UserSheetCreate(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/users/sheets', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.UserSheetCreate = UserSheetCreate;
/** 信息表更新 PUT /admin/users/sheets/${param0} */
function UserSheetUpdate(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/users/sheets/${param0}`, Object.assign({ method: 'PUT', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.UserSheetUpdate = UserSheetUpdate;
/** 启用/禁用信息表 PATCH /admin/users/sheets/${param0}/toggle */
function UserSheetToggle(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/admin/users/sheets/${param0}/toggle`, Object.assign({ method: 'PATCH', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.UserSheetToggle = UserSheetToggle;
/** 信息表全部数据 GET /admin/users/sheets/all */
function UserSheetAll(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/users/sheets/all', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.UserSheetAll = UserSheetAll;
/** 获取地区数据 GET /admin/utils/areas */
function UtilArea(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/utils/areas', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.UtilArea = UtilArea;
/** 获取字典数据 GET /admin/utils/data */
function UtilData(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/admin/utils/data', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.UtilData = UtilData;
/** 上传文件 POST /admin/utils/uploads */
function UtilUpload(body, file, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const formData = new FormData();
        if (file) {
            formData.append('file', file);
        }
        Object.keys(body).forEach((ele) => {
            const item = body[ele];
            if (item !== undefined && item !== null) {
                if (typeof item === 'object' && !(item instanceof File)) {
                    if (item instanceof Array) {
                        item.forEach((f) => formData.append(ele, f || ''));
                    }
                    else {
                        formData.append(ele, JSON.stringify(item));
                    }
                }
                else {
                    formData.append(ele, item);
                }
            }
        });
        return umi_1.request('/admin/utils/uploads', Object.assign({ method: 'POST', data: formData, requestType: 'form' }, (options || {})));
    });
}
exports.UtilUpload = UtilUpload;
/** 获取测评数据 GET /user/evaluations/${param0} */
function uEvaluationInfo(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/user/evaluations/${param0}`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.uEvaluationInfo = uEvaluationInfo;
/** 提交测评报告 POST /user/evaluations/${param0}/reports */
function uEvaluationReport(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/user/evaluations/${param0}/reports`, Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, params: Object.assign({}, queryParams), data: body }, (options || {})));
    });
}
exports.uEvaluationReport = uEvaluationReport;
/** 测评报告分页列表 GET /user/evaluations/reports */
function uEvaluationReportList(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/evaluations/reports', Object.assign({ method: 'GET', params: Object.assign({}, params) }, (options || {})));
    });
}
exports.uEvaluationReportList = uEvaluationReportList;
/** 查看测评报告数据 GET /user/evaluations/reports/${param0} */
function uEvaluationReportData(
// 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
params, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { id: param0 } = params, queryParams = tslib_1.__rest(params, ["id"]);
        return umi_1.request(`/user/evaluations/reports/${param0}`, Object.assign({ method: 'GET', params: Object.assign({}, queryParams) }, (options || {})));
    });
}
exports.uEvaluationReportData = uEvaluationReportData;
/** 账号登入 POST /user/login */
function uLogin(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/login', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.uLogin = uLogin;
/** 发送验证短信 POST /user/login/verify */
function uLoginVerify(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/login/verify', Object.assign({ method: 'POST', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.uLoginVerify = uLoginVerify;
/** 获取资料 GET /user/profile */
function uProfileInfo(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/profile', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.uProfileInfo = uProfileInfo;
/** 更新资料 PUT /user/profile */
function uProfileUpdate(body, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/profile', Object.assign({ method: 'PUT', headers: {
                'Content-Type': 'application/json',
            }, data: body }, (options || {})));
    });
}
exports.uProfileUpdate = uProfileUpdate;
/** 获取字典数据 GET /user/utils/data */
function uUtilData(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return umi_1.request('/user/utils/data', Object.assign({ method: 'GET' }, (options || {})));
    });
}
exports.uUtilData = uUtilData;
